{
  "info": {
    "_postman_id": "duv-api-collection-001",
    "name": "DUV API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET /races (all)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response is JSON\", function () { pm.response.to.be.json; });",
              "pm.test(\"Has data array\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('data'); });",
              "pm.test(\"Has pagination\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('pagination'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races?year=2024",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races?year=2024",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races"],
          "query": [{ "key": "year", "value": "2024" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response is JSON\", function () { pm.response.to.be.json; });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races?country=GER",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races?country=GER",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races"],
          "query": [{ "key": "country", "value": "GER" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races/{raceId} (valid)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races/42600",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races", "42600"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response is JSON\", function () { pm.response.to.be.json; });",
              "pm.test(\"Has raceId\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('raceId'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races/{raceId} (invalid)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races/999999",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races", "999999"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /results?raceId=42600",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/results?raceId=42600",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "results"],
          "query": [{ "key": "raceId", "value": "42600" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response is JSON\", function () { pm.response.to.be.json; });",
              "pm.test(\"Has data array\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('data'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /results?runnerId=2302",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/results?runnerId=2302",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "results"],
          "query": [{ "key": "runnerId", "value": "2302" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /results (no filter, should fail)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/results",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "results"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
              "pm.test(\"Error message for missing filter\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('code', 'MISSING_FILTER'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /results?raceId=999999 (invalid)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/results?raceId=999999",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "results"],
          "query": [{ "key": "raceId", "value": "999999" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Empty data array for invalid raceId\", function () { var json = pm.response.json(); pm.expect(json.data).to.be.an('array').that.is.empty; });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /results?raceId=42600&limit=2&offset=1 (pagination)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/results?raceId=42600&limit=2&offset=1",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "results"],
          "query": [
            { "key": "raceId", "value": "42600" },
            { "key": "limit", "value": "2" },
            { "key": "offset", "value": "1" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Pagination present\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('pagination'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /results?raceId=42600&sortBy=rank&order=desc (sorting)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/results?raceId=42600&sortBy=rank&order=desc",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "results"],
          "query": [
            { "key": "raceId", "value": "42600" },
            { "key": "sortBy", "value": "rank" },
            { "key": "order", "value": "desc" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response is JSON\", function () { pm.response.to.be.json; });",
              "pm.test(\"Has data array\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('data'); });",
              "pm.test(\"Has pagination\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('pagination'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1&discipline=100km",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1&discipline=100km",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" },
            { "key": "discipline", "value": "100km" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Has filtered data\", function () { var json = pm.response.json(); pm.expect(json.data.every(r => r.recordId === '100')); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1&gender=M&ageCategory=M40",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1&gender=M&ageCategory=M40",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" },
            { "key": "gender", "value": "M" },
            { "key": "ageCategory", "value": "M40" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Records match gender and category\", function () { var json = pm.response.json(); pm.expect(json.data.every(r => r.runnerId)); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1&surface=trail",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1&surface=trail",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" },
            { "key": "surface", "value": "trail" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Trail records returned\", function () { var json = pm.response.json(); pm.expect(json.data).to.be.an('array'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1&limit=2&offset=1",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1&limit=2&offset=1",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" },
            { "key": "limit", "value": "2" },
            { "key": "offset", "value": "1" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Pagination info present\", function () { var json = pm.response.json(); pm.expect(json.pagination.limit).to.eql(2); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1&sortBy=recordValue&order=asc",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1&sortBy=recordValue&order=asc",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" },
            { "key": "sortBy", "value": "recordValue" },
            { "key": "order", "value": "asc" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /records?recordType=region&region=1&gender=Z (invalid gender)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/records?recordType=region&region=1&gender=Z",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "records"],
          "query": [
            { "key": "recordType", "value": "region" },
            { "key": "region", "value": "1" },
            { "key": "gender", "value": "Z" }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
              "pm.test(\"Invalid gender error code\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('code', 'INVALID_PARAMETER'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races?upcoming=true",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races?upcoming=true",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races"],
          "query": [{ "key": "upcoming", "value": "true" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response is JSON and has data array\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('data'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races?upcoming=false",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races?upcoming=false",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races"],
          "query": [{ "key": "upcoming", "value": "false" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /races/{raceId}?editions",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost/duv2/api/v1/races/42600?editions=true",
          "protocol": "http",
          "host": ["localhost"],
          "path": ["duv2", "api", "v1", "races", "42600"],
          "query": [{ "key": "editions", "value": "true" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Has editions property\", function () { var json = pm.response.json(); pm.expect(json).to.have.property('editions'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
