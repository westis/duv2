openapi: 3.1.1
info:
  title: DUV Ultramarathon Statistics API
  version: 1.0.0
  description: |
    Modern read-only REST API for DUV Ultramarathon Statistics statistics.

    ## Authentication
    This API supports multiple authentication tiers:
    - **Public**: Limited access without authentication
    - **Basic**: Standard access with API key
    - **Premium**: Enhanced access with premium API key
    - **Admin**: Full access with administrative API key

    API keys should be included in the X-API-Key header of each request.

    ## Rate Limiting
    Rate limits vary by tier:
    - Public: 60 requests per hour
    - Basic: 1,000 requests per hour
    - Premium: 10,000 requests per hour
    - Admin: 50,000 requests per hour

    Rate limit information is returned in response headers.
servers:
  - url: /api/v1
security: [] # Default: no authentication required (public tier)

# Added tags for organizing endpoints into logical sections
tags:
  # Core endpoints (Phase 1)
  - name: Races
    description: Race-related endpoints for retrieving lists and details of races
  - name: Results
    description: Results/performance endpoints for specific races or runners
  - name: Runners
    description: Runner-related endpoints and personal data
  - name: Records
    description: Course records, world records, and regional best performances
  - name: Top Lists
    description: Top lists of performances (all-time or by year)

  # Additional endpoints (Phase 2+)
  - name: Statistics
    description: Summary and analytical statistics endpoints
  - name: Admin
    description: Administrative endpoints (requires Admin tier authentication)

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authenticated access (Basic, Premium, or Admin tier)
  schemas:
    # Response wrapper schemas
    PaginatedResponse:
      type: object
      description: Standard wrapper for paginated collection responses
      properties:
        data:
          type: array
          description: Array of resource objects
          items:
            type: object
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: Total number of resources available
            limit:
              type: integer
              description: Number of items per page
            offset:
              type: integer
              description: Starting position of the results
            next:
              type: string
              format: uri
              description: URL to the next page of results (if available)
            previous:
              type: string
              format: uri
              description: URL to the previous page of results (if available)
      required:
        - data
        - pagination

    RacesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Race"
        pagination:
          $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
      required:
        - data
        - pagination

    ResultsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Result"
        pagination:
          $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
      required:
        - data
        - pagination

    RunnersResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Runner"
        pagination:
          $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
      required:
        - data
        - pagination

    # Error response schemas
    Error:
      type: object
      description: Standard error response format
      properties:
        status:
          type: integer
          description: HTTP status code
        code:
          type: string
          description: Application-specific error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: array
          description: Additional error details (if available)
          items:
            type: object
            properties:
              field:
                type: string
                description: The field that caused the error
              reason:
                type: string
                description: Reason for the error
      required:
        - status
        - code
        - message

    ValidationError:
      type: object
      description: Validation error response
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              example: "VALIDATION_ERROR"
            status:
              example: 400

    AuthenticationError:
      type: object
      description: Authentication error response
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              example: "AUTHENTICATION_ERROR"
            status:
              example: 401

    AuthorizationError:
      type: object
      description: Authorization error response
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              example: "AUTHORIZATION_ERROR"
            status:
              example: 403

    NotFoundError:
      type: object
      description: Resource not found error response
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              example: "RESOURCE_NOT_FOUND"
            status:
              example: 404

    ServerError:
      type: object
      description: Internal server error response
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              example: "INTERNAL_SERVER_ERROR"
            status:
              example: 500

    Race:
      type: object
      properties:
        raceId:
          type: string
          description: Unique race identifier
        name:
          type: string
          description: Race name
        edition:
          type: string
          description: Edition identifier/number
        country:
          type: string
          description: Country code
        city:
          type: string
          description: City name
        date:
          type: string
          format: date-time
          description: Race start date
        endDate:
          type: string
          format: date-time
          description: Race end date for multi-day events
        distance:
          type: number
          description: Distance in kilometers (normalized value)
        distanceOriginal:
          type: string
          description: Original distance description (e.g. "100 miles")
        duration:
          type: string
          description: Duration for time-based events (e.g. "24h")
        raceType:
          type: integer
          description: Type of race (1=Road, 2=Trail, etc.)
        altitude:
          type: string
          description: Altitude difference
        finishers:
          type: integer
          description: Total number of finishers
        finishersMen:
          type: integer
          description: Number of male finishers
        finishersWomen:
          type: integer
          description: Number of female finishers
        timeLimit:
          type: string
          description: Time limit for the race
        resultsStatus:
          type: string
          description: Status of results (N=none, C=complete, etc.)
        iauLabel:
          type: string
          description: IAU certification status
        recordProof:
          type: string
          description: Record eligibility status
        website:
          type: string
          description: Race website URL
        organizer:
          type: string
          description: Organizing body/promoter
        additionalInfo:
          type: string
          description: Additional information about the race
        fee:
          type: string
          description: Registration fee information
        fieldLimit:
          type: string
          description: Maximum number of participants allowed
        contact:
          type: string
          description: Contact person or information
        email:
          type: string
          description: Contact email address
        phone:
          type: string
          description: Contact phone number
        address:
          type: string
          description: Race address
        postcode:
          type: string
          description: Postal/ZIP code
        courseDescription:
          type: string
          description: Description of the course
      required:
        - raceId
        - name
        - date
        - distance
    Result:
      type: object
      properties:
        perfId:
          type: string
          description: Unique performance identifier
        raceId:
          type: string
          description: Associated race identifier
        runnerId:
          type: string
          description: Associated runner identifier
        rank:
          type: integer
          description: Overall rank in the race
        rankGender:
          type: integer
          description: Rank within gender category
        rankCategory:
          type: integer
          description: Rank within age category
        timeGross:
          type: string
          description: Gross/gun time
        timeNet:
          type: string
          description: Net/chip time
        distance:
          type: number
          description: Distance achieved (for time-based events)
        category:
          type: string
          description: Age/performance category
        categoryEvent:
          type: string
          description: Race-specific category
        rankCategoryEvent:
          type: integer
          description: Rank within race-specific category
        categoryGerman:
          type: string
          description: German category system (e.g., M40)
        rankCategoryGerman:
          type: integer
          description: Rank within German category system
        categoryIAU:
          type: string
          description: IAU/international category
        rankCategoryIAU:
          type: integer
          description: Rank within IAU/international category
        club:
          type: string
          description: Club/team affiliation for this performance
        scores:
          type: number
          description: Calculated performance score
        age:
          type: number
          description: Runner's age at time of performance
        rankInternationalYear:
          type: integer
          description: Rank in international yearly rankings
        rankNationalYear:
          type: integer
          description: Rank in national yearly rankings
        isExcluded:
          type: boolean
          description: Whether this result is excluded from rankings
        comments:
          type: string
          description: Additional comments or notes about the performance
      required:
        - perfId
        - raceId
        - runnerId
        - rank
    Runner:
      type: object
      properties:
        runnerId:
          type: string
          description: Unique runner identifier
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        originalName:
          type: string
          description: Name in original script/characters
        originalNameFirstName:
          type: string
          description: First name in original script/characters
        originalNameLastName:
          type: string
          description: Last name in original script/characters
        nationality:
          type: string
          description: Primary nationality code
        nationality2:
          type: string
          description: Secondary nationality code
        gender:
          type: string
          enum: [M, W, X]
          description: Gender (M=male, W=female, X=other)
        birthYear:
          type: integer
          description: Year of birth
        birthDate:
          type: string
          format: date
          description: Full birth date (if known)
        deathDate:
          type: string
          format: date
          description: Date of death (if applicable)
        club:
          type: string
          description: Primary club affiliation
        city:
          type: string
          description: Home city
        totalMileage:
          type: number
          description: Total ultramarathon mileage
        raceCount:
          type: integer
          description: Number of races completed
        comments:
          type: string
          description: Additional comments or notes
        privacy:
          type: integer
          description: Privacy setting level
      required:
        - runnerId
        - firstName
        - lastName
        - nationality
  parameters:
    YearParam:
      name: year
      in: query
      description: Filter events by year (integer)
      required: false
      schema:
        type: integer
        example: 2024
      style: form
      explode: true
    RaceIdParam:
      name: raceId
      in: path
      description: Unique race identifier
      required: true
      schema:
        type: string
        example: "42600"
      style: simple
      explode: false
    RunnerIdParam:
      name: runnerId
      in: path
      description: Unique runner identifier
      required: true
      schema:
        type: string
        example: "2302"
      style: simple
      explode: false
    RaceIdQueryParam:
      name: raceId
      in: query
      description: Filter results by race ID
      required: false
      schema:
        type: string
        example: "42600"
      style: form
      explode: true
    RunnerIdQueryParam:
      name: runnerId
      in: query
      description: Filter results by runner ID
      required: false
      schema:
        type: string
        example: "2302"
      style: form
      explode: true
    NationalityParam:
      name: nationality
      in: query
      description: Filter runners by nationality code (e.g. 'GER')
      required: false
      schema:
        type: string
        example: "GER"
      style: form
      explode: true
    ClubParam:
      name: club
      in: query
      description: Filter runners by club name
      required: false
      schema:
        type: string
        example: "LG Ultralauf"
      style: form
      explode: true
    IAULabelParam:
      name: iauLabel
      in: query
      description: "Filter events with IAU certification label. Values: Y (Yes), N (No), T (Trail), G (Gold), S (Silver), B (Bronze)"
      required: false
      schema:
        type: string
        enum: [Y, N, T, G, S, B]
        example: "Y"
      style: form
      explode: true
    RecordProofParam:
      name: recordProof
      in: query
      description: "Filter events eligible for records. Values: Y (Yes), N (No)"
      required: false
      schema:
        type: string
        enum: [Y, N]
        example: "Y"
      style: form
      explode: true
    DurationParam:
      name: duration
      in: query
      description: Filter events by duration (e.g., 24h, 48h)
      required: false
      schema:
        type: string
        example: "24h"
      style: form
      explode: true
    RankFilterParam:
      name: maxRank
      in: query
      description: Filter results with rank up to this value
      required: false
      schema:
        type: integer
        minimum: 1
        example: 10
      style: form
      explode: true
    AgeCategoryParam:
      name: ageCategory
      in: query
      description: Filter results by age category code (e.g. M40, W55)
      required: false
      schema:
        type: string
        example: "M40"
      style: form
      explode: true
    CategoryParam:
      name: category
      in: query
      description: Filter results by category code
      required: false
      schema:
        type: string
      style: form
      explode: true
    RaceCountMinParam:
      name: raceCountMin
      in: query
      description: Filter runners by minimum number of races completed
      required: false
      schema:
        type: integer
        minimum: 0
        example: 5
      style: form
      explode: true
    RaceCountMaxParam:
      name: raceCountMax
      in: query
      description: Filter runners by maximum number of races completed
      required: false
      schema:
        type: integer
        minimum: 0
        example: 50
      style: form
      explode: true
    MileageMinParam:
      name: mileageMin
      in: query
      description: Filter runners by minimum total ultramarathon mileage
      required: false
      schema:
        type: number
        minimum: 0
        example: 100
      style: form
      explode: true
    MileageMaxParam:
      name: mileageMax
      in: query
      description: Filter runners by maximum total ultramarathon mileage
      required: false
      schema:
        type: number
        minimum: 0
        example: 1000
      style: form
      explode: true
    LimitParam:
      name: limit
      in: query
      description: Maximum number of items to return
      required: false
      schema:
        type: integer
        example: 100
      style: form
      explode: true
    OffsetParam:
      name: offset
      in: query
      description: Number of items to skip
      required: false
      schema:
        type: integer
        example: 0
      style: form
      explode: true
    CountryParam:
      name: country
      in: query
      description: Filter events by country code (e.g. 'GER')
      required: false
      schema:
        type: string
        example: "GER"
      style: form
      explode: true
    PerfIdParam:
      name: perfId
      in: path
      description: Unique performance identifier
      required: true
      schema:
        type: string
      style: simple
      explode: false
    NameSearchParam:
      name: search
      in: query
      description: Full-text search on text fields (e.g., event name, city, runner name)
      required: false
      schema:
        type: string
        example: "marathon"
      style: form
      explode: true
    CityParam:
      name: city
      in: query
      description: Filter by city (partial match)
      required: false
      schema:
        type: string
        example: "Berlin"
      style: form
      explode: true
    EditionParam:
      name: edition
      in: query
      description: Filter by edition identifier
      required: false
      schema:
        type: string
        example: "12"
      style: form
      explode: true
    TypeParam:
      name: type
      in: query
      description: Filter by event type code
      required: false
      schema:
        type: integer
        example: 1
      style: form
      explode: true
    DateFromParam:
      name: dateFrom
      in: query
      description: Filter events starting on or after this date
      required: false
      schema:
        type: string
        format: date
        example: "2024-01-01"
      style: form
      explode: true
    DateToParam:
      name: dateTo
      in: query
      description: Filter events starting on or before this date
      required: false
      schema:
        type: string
        format: date
        example: "2024-12-31"
      style: form
      explode: true
    DistanceMinParam:
      name: distanceMin
      in: query
      description: Minimum event distance (km)
      required: false
      schema:
        type: number
        example: 50
      style: form
      explode: true
    DistanceMaxParam:
      name: distanceMax
      in: query
      description: Maximum event distance (km)
      required: false
      schema:
        type: number
        example: 100
      style: form
      explode: true
    RacesSortByParam:
      name: sortBy
      in: query
      description: Field to sort races by
      required: false
      schema:
        type: string
        enum: [date, name, distance, country, city]
        example: "date"
      style: form
      explode: true
    ResultsSortByParam:
      name: sortBy
      in: query
      description: Field to sort results by
      required: false
      schema:
        type: string
        enum: [time, distance, rank, date, runnerName]
        example: "rank"
      style: form
      explode: true
    RunnersSortByParam:
      name: sortBy
      in: query
      description: Field to sort runners by
      required: false
      schema:
        type: string
        enum: [name, nationality, mileage, raceCount, yob]
        example: "name"
      style: form
      explode: true
    OrderParam:
      name: order
      in: query
      description: Sort order
      required: false
      schema:
        type: string
        enum: [asc, desc]
        example: "asc"
      style: form
      explode: true
    GenderParam:
      name: gender
      in: query
      description: Filter by gender code (M, W, X)
      required: false
      schema:
        type: string
        enum: [M, W, X]
        example: "M"
      style: form
      explode: true
    YOBParam:
      name: yob
      in: query
      description: Filter by year of birth
      required: false
      schema:
        type: integer
        example: 1980
      style: form
      explode: true
    ResultsStatusParam:
      name: resultsStatus
      in: query
      description: "Filter events by results status. Values: N (no results), C (complete), P (partial), O (postponed), I (insufficient list), R (revoked/cancelled), S (shortened, too short), T (to do / in preparation), Z (no finishers)"
      required: false
      schema:
        type: string
        enum: [N, C, P, O, I, R, S, T, Z]
        example: "C"
      style: form
      explode: true
    FutureStatusParam:
      name: futureStatus
      in: query
      description: "Filter events by future scheduling status. Values: D (discontinued), B (Biannual, every second year), S (Skip next year)"
      required: false
      schema:
        type: string
        enum: [D, B, S]
        example: "B"
      style: form
      explode: true
    CreatedAfterParam:
      name: createdAfter
      in: query
      description: Filter entities created on or after this date
      required: false
      schema:
        type: string
        format: date-time
        example: "2024-01-01T00:00:00Z"
      style: form
      explode: true
    ChangedAfterParam:
      name: changedAfter
      in: query
      description: Filter entities modified on or after this date
      required: false
      schema:
        type: string
        format: date-time
        example: "2024-01-01T00:00:00Z"
      style: form
      explode: true
    CupParam:
      name: cup
      in: query
      description: Filter events by cup series identifier
      required: false
      schema:
        type: string
        example: "DUV Trophy"
      style: form
      explode: true
    RadiusParam:
      name: radius
      in: query
      description: Filter events within a geographic radius (km) of specified coordinates
      required: false
      schema:
        type: object
        properties:
          lat:
            type: number
            format: float
            example: 52.5200
          lon:
            type: number
            format: float
            example: 13.4050
          distance:
            type: integer
            minimum: 1
            example: 50
      style: deepObject
      explode: true
    TimeTypeParam:
      name: timeType
      in: query
      description: Specify which time to use for results (net or gross)
      required: false
      schema:
        type: string
        enum: [net, gross]
        default: net
        example: "net"
      style: form
      explode: true
    AgeGroupingParam:
      name: ageGrouping
      in: query
      description: Specify which age grouping system to use for categorizing results
      required: false
      schema:
        type: string
        enum: [iau, german, event, yob]
        default: iau
        example: "german"
      style: form
      explode: true
    LanguageParam:
      name: language
      in: query
      description: Preferred language for localized content
      required: false
      schema:
        type: string
        enum: [DE, EN, FR, IT, ES, RU, JA, ZH]
        default: EN
        example: "EN"
      style: form
      explode: true
    FinisherMinParam:
      name: finisherMin
      in: query
      description: "Filter events by minimum number of total finishers"
      required: false
      schema:
        type: integer
        minimum: 0
        example: 50
      style: form
      explode: true
    FinisherMaxParam:
      name: finisherMax
      in: query
      description: "Filter events by maximum number of total finishers"
      required: false
      schema:
        type: integer
        minimum: 0
        example: 1000
      style: form
      explode: true
    FinisherMenMinParam:
      name: finisherMenMin
      in: query
      description: "Filter events with at least this many male finishers"
      required: false
      schema:
        type: integer
        minimum: 0
        example: 10
      style: form
      explode: true
    FinisherMenMaxParam:
      name: finisherMenMax
      in: query
      description: "Filter events with at most this many male finishers"
      required: false
      schema:
        type: integer
        minimum: 0
        example: 100
      style: form
      explode: true
    FinisherWomenMinParam:
      name: finisherWomenMin
      in: query
      description: "Filter events with at least this many female finishers"
      required: false
      schema:
        type: integer
        minimum: 0
        example: 5
      style: form
      explode: true
    FinisherWomenMaxParam:
      name: finisherWomenMax
      in: query
      description: "Filter events with at most this many female finishers"
      required: false
      schema:
        type: integer
        minimum: 0
        example: 50
      style: form
      explode: true
    PrivacyLevelParam:
      name: privacyLevel
      in: query
      description: |
        Override default privacy behavior for this request.
        - 0: Show all available data (requires Admin tier)
        - 1: Respect individual privacy settings (default)
        - 2: Apply enhanced privacy (hide sensitive fields)
        - 3: Maximum privacy (minimal personal data)
      required: false
      schema:
        type: integer
        enum: [0, 1, 2, 3]
        default: 1
      style: form
      explode: true
    TierOverrideParam:
      name: tierOverride
      in: query
      description: |
        Override the effective tier for this request.
        Allows downgrading the effective permissions (e.g., Premium user testing Public tier behavior).
        Requires authentication; cannot upgrade above authenticated tier.
      required: false
      schema:
        type: string
        enum: [public, basic, premium]
      style: form
      explode: true
    IncludePrivateParam:
      name: includePrivate
      in: query
      description: |
        Include private/hidden runners in search results.
        - true: Include runners with privacy level 3 (requires Admin tier)
        - false: Exclude private runners (default)
      required: false
      schema:
        type: boolean
        default: false
      style: form
      explode: true
    ExtendedFieldsParam:
      name: extendedFields
      in: query
      description: |
        Include extended/premium fields in the response.
        - true: Include all available fields (requires Premium/Admin tier)
        - false: Include only standard fields
      required: false
      schema:
        type: boolean
        default: false
      style: form
      explode: true
paths:
  /races:
    get:
      summary: Retrieve list of races
      description: |
        Returns a list of races matching the specified criteria.

        **Authentication:**
        - Public tier: Limited to 100 races per request, basic data only
        - Authenticated tiers: Full access with all fields
      operationId: getRaces
      # Added tag
      tags:
        - Races
      security:
        - {} # Public access allowed
        - ApiKeyAuth: [] # Optional authentication
      parameters:
        - $ref: "#/components/parameters/YearParam"
        - $ref: "#/components/parameters/CountryParam"
        - $ref: "#/components/parameters/CityParam"
        - $ref: "#/components/parameters/EditionParam"
        - $ref: "#/components/parameters/TypeParam"
        - $ref: "#/components/parameters/DateFromParam"
        - $ref: "#/components/parameters/DateToParam"
        - $ref: "#/components/parameters/DistanceMinParam"
        - $ref: "#/components/parameters/DistanceMaxParam"
        - $ref: "#/components/parameters/DurationParam"
        - $ref: "#/components/parameters/ResultsStatusParam"
        - $ref: "#/components/parameters/FutureStatusParam"
        - $ref: "#/components/parameters/IAULabelParam"
        - $ref: "#/components/parameters/RecordProofParam"
        - $ref: "#/components/parameters/FinisherMinParam"
        - $ref: "#/components/parameters/FinisherMaxParam"
        - $ref: "#/components/parameters/FinisherMenMinParam"
        - $ref: "#/components/parameters/FinisherMenMaxParam"
        - $ref: "#/components/parameters/FinisherWomenMinParam"
        - $ref: "#/components/parameters/FinisherWomenMaxParam"
        - $ref: "#/components/parameters/CupParam"
        - $ref: "#/components/parameters/RadiusParam"
        - $ref: "#/components/parameters/CreatedAfterParam"
        - $ref: "#/components/parameters/ChangedAfterParam"
        - $ref: "#/components/parameters/LanguageParam"
        - $ref: "#/components/parameters/NameSearchParam"
        - $ref: "#/components/parameters/RacesSortByParam"
        - $ref: "#/components/parameters/OrderParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
        - $ref: "#/components/parameters/ExtendedFieldsParam"
        - $ref: "#/components/parameters/TierOverrideParam"
      responses:
        "200":
          description: Array of events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacesResponse"
              example:
                data:
                  - raceId: "42600"
                    name: "100km Lauf Biel/Bienne"
                    edition: "60"
                    country: "SUI"
                    city: "Biel/Bienne"
                    date: "2018-06-08T22:00:00Z"
                    endDate: "2018-06-09T22:00:00Z"
                    distance: 100
                    distanceOriginal: "100km"
                    eventType: 1
                    altitude: "770m D+"
                    finishers: 387
                    finishersMen: 320
                    finishersWomen: 67
                    timeLimit: "21:00:00"
                    resultsStatus: "C"
                    iauLabel: "B"
                    recordProof: "Y"
                    website: "https://www.100km.ch"
                    organizer: "Verein 100km Biel/Bienne"
                  - raceId: "60546"
                    name: "Comrades Marathon"
                    edition: "93"
                    country: "RSA"
                    city: "Durban"
                    date: "2018-06-10T05:30:00Z"
                    distance: 90.184
                    distanceOriginal: "90.184km"
                    eventType: 1
                    altitude: "Up Run 1800m D+"
                    finishers: 16146
                    finishersMen: 11040
                    finishersWomen: 5106
                    timeLimit: "12:00:00"
                    resultsStatus: "C"
                    iauLabel: "G"
                    recordProof: "Y"
                    website: "https://www.comrades.com"
                    organizer: "Comrades Marathon Association"
                pagination:
                  total: 8974
                  limit: 100
                  offset: 0
                  next: "/api/v1/races?limit=100&offset=100"
                  previous: null
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
              example:
                status: 400
                code: "VALIDATION_ERROR"
                message: "Invalid request parameters"
                details:
                  - field: "year"
                    reason: "Must be a valid year (e.g., 2024)"
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
              example:
                status: 401
                code: "AUTHENTICATION_ERROR"
                message: "API key is missing or invalid"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /races/{raceId}:
    get:
      summary: Retrieve a specific race by ID
      description: |
        Returns detailed information about a specific race.

        **Authentication:**
        - Public tier: Basic race data only
        - Authenticated tiers: Full race details
      operationId: getRaceById
      # Added tag
      tags:
        - Races
      security:
        - {} # Public access allowed
        - ApiKeyAuth: [] # Optional authentication
      parameters:
        - $ref: "#/components/parameters/RaceIdParam"
      responses:
        "200":
          description: Event object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
              example:
                raceId: "42600"
                name: "100km Lauf Biel/Bienne"
                edition: "60"
                country: "SUI"
                city: "Biel/Bienne"
                date: "2018-06-08T22:00:00Z"
                endDate: "2018-06-09T22:00:00Z"
                distance: 100
                distanceOriginal: "100km"
                eventType: 1
                altitude: "770m D+"
                finishers: 387
                finishersMen: 320
                finishersWomen: 67
                timeLimit: "21:00:00"
                resultsStatus: "C"
                iauLabel: "B"
                recordProof: "Y"
                website: "https://www.100km.ch"
                organizer: "Verein 100km Biel/Bienne"
                additionalInfo: "Night run from Biel to Biel"
                fee: "CHF 140"
                fieldLimit: "1500 participants"
                contact: "Organization Committee"
                email: "info@100km.ch"
                phone: "+41 32 323 13 17"
                address: "Zentralstrasse 19, Postfach"
                postcode: "2502"
                courseDescription: "Circular course starting and finishing in Biel"
        "404":
          description: Event not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
              example:
                status: 404
                code: "RESOURCE_NOT_FOUND"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /races/{raceId}/results:
    get:
      summary: Retrieve results for a specific race
      description: |
        Returns results/performances for a specific race.

        **Authentication:**
        - Public tier: Limited to top 100 results with basic fields
        - Basic tier: All results with standard fields
        - Premium/Admin tiers: All results with extended fields
      operationId: getResultsByRace
      # Added tag
      tags:
        - Results
        - Races
      security:
        - {} # Public access allowed (limited)
        - ApiKeyAuth: [] # Enhanced access with authentication
      parameters:
        - $ref: "#/components/parameters/RaceIdParam"
        - $ref: "#/components/parameters/ResultsSortByParam"
        - $ref: "#/components/parameters/OrderParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: Array of result objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsResponse"
              example:
                data:
                  - perfId: "1234567"
                    raceId: "42600"
                    runnerId: "2302"
                    rank: 1
                    rankGender: 1
                    rankCategory: 1
                    timeGross: "06:50:23"
                    timeNet: "06:50:23"
                    distance: 100
                    category: "M40"
                    categoryGerman: "M40"
                    rankCategoryGerman: 1
                    categoryIAU: "M"
                    rankCategoryIAU: 1
                    club: "LG Ultralauf"
                    scores: 876
                    age: 43.7
                    rankInternationalYear: 14
                    rankNationalYear: 2
                    isExcluded: false
                  - perfId: "1234568"
                    raceId: "42600"
                    runnerId: "3561"
                    rank: 2
                    rankGender: 2
                    rankCategory: 1
                    timeGross: "07:02:15"
                    timeNet: "07:02:15"
                    distance: 100
                    category: "M35"
                    categoryGerman: "M35"
                    rankCategoryGerman: 1
                    categoryIAU: "M"
                    rankCategoryIAU: 2
                    club: "Eintracht Frankfurt"
                    scores: 843
                    age: 37.2
                    rankInternationalYear: 26
                    rankNationalYear: 3
                    isExcluded: false
                pagination:
                  total: 387
                  limit: 100
                  offset: 0
                  next: "/api/v1/races/42600/results?limit=100&offset=100"
                  previous: null
        "404":
          description: Event not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /results:
    get:
      summary: Retrieve results filtered by event or runner
      description: |
        Returns results/performances filtered by various criteria.

        **Authentication:**
        - Public tier: Limited to 100 results with basic fields
        - Basic tier: Up to 1000 results with standard fields
        - Premium/Admin tiers: Extended results with all fields
      operationId: getResults
      # Added tag
      tags:
        - Results
      security:
        - {} # Public access allowed (limited)
        - ApiKeyAuth: [] # Enhanced access with authentication
      parameters:
        - $ref: "#/components/parameters/RaceIdQueryParam"
        - $ref: "#/components/parameters/RunnerIdQueryParam"
        - $ref: "#/components/parameters/RankFilterParam"
        - $ref: "#/components/parameters/AgeCategoryParam"
        - $ref: "#/components/parameters/GenderParam"
        - $ref: "#/components/parameters/TimeTypeParam"
        - $ref: "#/components/parameters/AgeGroupingParam"
        - $ref: "#/components/parameters/LanguageParam"
        - $ref: "#/components/parameters/ResultsSortByParam"
        - $ref: "#/components/parameters/OrderParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
        - $ref: "#/components/parameters/ExtendedFieldsParam"
        - $ref: "#/components/parameters/TierOverrideParam"
      responses:
        "200":
          description: Array of result objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /runners:
    get:
      summary: Retrieve list of runners
      description: |
        Returns a list of runners matching the specified criteria.

        **Authentication:**
        - Public tier: Limited to 100 runners with minimal personal data, respecting privacy settings
        - Basic tier: Up to 1000 runners with standard fields, respecting privacy settings
        - Premium tier: Full access respecting privacy settings
        - Admin tier: Full access with ability to override some privacy restrictions
      operationId: getRunners
      # Added tag
      tags:
        - Runners
      security:
        - {} # Public access allowed (limited)
        - ApiKeyAuth: [] # Enhanced access with authentication
      parameters:
        - $ref: "#/components/parameters/NationalityParam"
        - $ref: "#/components/parameters/ClubParam"
        - $ref: "#/components/parameters/CityParam"
        - $ref: "#/components/parameters/GenderParam"
        - $ref: "#/components/parameters/YOBParam"
        - $ref: "#/components/parameters/RaceCountMinParam"
        - $ref: "#/components/parameters/RaceCountMaxParam"
        - $ref: "#/components/parameters/MileageMinParam"
        - $ref: "#/components/parameters/MileageMaxParam"
        - $ref: "#/components/parameters/CreatedAfterParam"
        - $ref: "#/components/parameters/ChangedAfterParam"
        - $ref: "#/components/parameters/NameSearchParam"
        - $ref: "#/components/parameters/RunnersSortByParam"
        - $ref: "#/components/parameters/OrderParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
        - $ref: "#/components/parameters/LanguageParam"
        - $ref: "#/components/parameters/PrivacyLevelParam"
        - $ref: "#/components/parameters/IncludePrivateParam"
        - $ref: "#/components/parameters/ExtendedFieldsParam"
        - $ref: "#/components/parameters/TierOverrideParam"
      responses:
        "200":
          description: Array of runner objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunnersResponse"
              example:
                data:
                  - runnerId: "2302"
                    firstName: "Max"
                    lastName: "Mustermann"
                    originalName: "Max Mustermann"
                    originalNameFirstName: "Max"
                    originalNameLastName: "Mustermann"
                    nationality: "GER"
                    nationality2: "SUI"
                    gender: "M"
                    birthYear: 1975
                    birthDate: "1975-04-15"
                    deathDate: null
                    club: "LG Ultralauf"
                    city: "Berlin"
                    totalMileage: 3480.5
                    raceCount: 34
                    parentId: 0
                    duvId: 0
                    privacy: 0
                    comments: "National team member 2018-2023"
                  - runnerId: "3561"
                    firstName: "Erika"
                    lastName: "Musterfrau"
                    originalName: "Erika Musterfrau"
                    originalNameFirstName: "Erika"
                    originalNameLastName: "Musterfrau"
                    nationality: "SUI"
                    nationality2: null
                    gender: "W"
                    birthYear: 1980
                    birthDate: "1980-09-22"
                    deathDate: null
                    club: "Swiss Ultra Runners"
                    city: "Zürich"
                    totalMileage: 1850.2
                    raceCount: 18
                    parentId: 0
                    duvId: 0
                    privacy: 1
                    comments: "Multiple Comrades finisher"
                pagination:
                  total: 92345
                  limit: 100
                  offset: 0
                  next: "/api/v1/runners?limit=100&offset=100"
                  previous: null
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /runners/{runnerId}:
    get:
      summary: Retrieve a runner by ID
      description: |
        Returns detailed information about a specific runner.

        **Authentication:**
        - Public tier: Basic data only, respecting privacy settings
        - Basic tier: Standard fields, respecting privacy settings
        - Premium/Admin tiers: Extended data with varying privacy restrictions

        **Privacy:**
        Access to personal details is controlled by the runner's privacy setting
        and the authentication tier of the request.
      operationId: getRunnerById
      # Added tag
      tags:
        - Runners
      security:
        - {} # Public access allowed (limited)
        - ApiKeyAuth: [] # Enhanced access with authentication
      parameters:
        - $ref: "#/components/parameters/RunnerIdParam"
        - $ref: "#/components/parameters/LanguageParam"
        - $ref: "#/components/parameters/PrivacyLevelParam"
        - $ref: "#/components/parameters/ExtendedFieldsParam"
        - $ref: "#/components/parameters/TierOverrideParam"
      responses:
        "200":
          description: Runner object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runner"
              example:
                runnerId: "2302"
                firstName: "Max"
                lastName: "Mustermann"
                originalName: "Max Mustermann"
                originalNameFirstName: "Max"
                originalNameLastName: "Mustermann"
                nationality: "GER"
                nationality2: "SUI"
                gender: "M"
                birthYear: 1975
                birthDate: "1975-04-15"
                deathDate: null
                club: "LG Ultralauf"
                city: "Berlin"
                totalMileage: 3480.5
                raceCount: 34
                parentId: 0
                duvId: 0
                privacy: 0
                comments: "National team member 2018-2023"
        "404":
          description: Runner not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
              example:
                status: 404
                code: "RESOURCE_NOT_FOUND"
                message: "Runner with ID '999999' not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
  /runners/{runnerId}/results:
    get:
      summary: Retrieve results for a specific runner
      description: |
        Returns all results/performances for a specific runner.

        **Authentication:**
        - Public tier: Limited to 100 most recent results, basic fields only
        - Basic tier: All results with standard fields
        - Premium/Admin tiers: All results with extended analysis fields
      operationId: getResultsByRunner
      # Added tag
      tags:
        - Results
        - Runners
      security:
        - {} # Public access allowed (limited)
        - ApiKeyAuth: [] # Enhanced access with authentication
      parameters:
        - $ref: "#/components/parameters/RunnerIdParam"
        - $ref: "#/components/parameters/ResultsSortByParam"
        - $ref: "#/components/parameters/OrderParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: Array of result objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsResponse"
        "404":
          description: Runner not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  # Added placeholder paths for future endpoints

  /top-lists:
    get:
      summary: Retrieve top lists of performances (all-time or by year)
      description: |
        Returns top lists of performances across categories, optionally filtered by year.

        **Authentication:**
        - Public tier: Limited access (top 10)
        - Basic/Premium tier: Extended access
      operationId: getTopLists
      tags:
        - Top Lists
      parameters:
        - $ref: "#/components/parameters/YearParam"
        - name: distance
          in: query
          description: Distance category (e.g., '100km', '24h')
          required: false
          schema:
            type: string
        - name: surface
          in: query
          description: Surface type (road, trail, track, indoor)
          required: false
          schema:
            type: string
            enum: [road, trail, track, indoor]
        - $ref: "#/components/parameters/CountryParam"
        - $ref: "#/components/parameters/GenderParam"
        - $ref: "#/components/parameters/AgeCategoryParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: Top lists of performances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /statistics/summary:
    get:
      summary: Retrieve summary statistics across the database
      description: |
        Returns aggregated statistics like total number of events, runners, and results
        by various dimensions (year, country, distance, etc.)
        Based on tstat0 table data.

        **Authentication:**
        - Basic tier or higher required
      operationId: getSummaryStats
      tags:
        - Statistics
      security:
        - ApiKeyAuth: [] # Authentication required
      responses:
        "200":
          description: Summary statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalPerformances:
                    type: integer
                  totalRunners:
                    type: integer
                  totalEvents:
                    type: integer
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /statistics/counts:
    get:
      summary: Retrieve performance counts by various dimensions
      description: |
        Returns counts of performances by country, year, discipline, and gender.
        Based on tstat table data.

        **Authentication:**
        - Public tier: Limited access
        - Basic tier or higher: Full access
      operationId: getPerformanceCounts
      tags:
        - Statistics
      parameters:
        - $ref: "#/components/parameters/CountryParam"
        - $ref: "#/components/parameters/YearParam"
        - name: discipline
          in: query
          description: Discipline/distance category
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/GenderParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: Performance count statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        country:
                          type: string
                        year:
                          type: integer
                        discipline:
                          type: string
                        gender:
                          type: string
                        count:
                          type: integer
                  pagination:
                    $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /statistics/nationality:
    get:
      summary: Retrieve performance and runner counts by nationality
      description: |
        Returns counts of performances and unique runners by nationality, year, and gender.
        Based on tstat3 table data.

        **Authentication:**
        - Public tier: Limited access
        - Basic tier or higher: Full access
      operationId: getNationalityCounts
      tags:
        - Statistics
      parameters:
        - name: nationality
          in: query
          description: Filter by nationality code
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/YearParam"
        - $ref: "#/components/parameters/GenderParam"
        - name: region
          in: query
          description: Filter by region code
          required: false
          schema:
            type: integer
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: Nationality statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        nationality:
                          type: string
                        year:
                          type: integer
                        gender:
                          type: string
                        region:
                          type: integer
                        performances:
                          type: integer
                        runners:
                          type: integer
                  pagination:
                    $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /statistics/trends:
    get:
      summary: Retrieve trend analysis over time
      description: |
        Returns trend data for events, participation, performance levels over time

        **Authentication:**
        - Premium tier or higher required
      operationId: getTrendStats
      tags:
        - Statistics
      security:
        - ApiKeyAuth: [] # Authentication required
      parameters:
        - name: metric
          in: query
          description: Trend metric to analyze
          required: true
          schema:
            type: string
            enum: [event_count, avg_finishers, gender_ratio, finish_times]
        - name: periodUnit
          in: query
          description: Time period unit for grouping
          required: false
          schema:
            type: string
            enum: [month, quarter, year, decade]
            default: year
        - $ref: "#/components/parameters/DateFromParam"
        - $ref: "#/components/parameters/DateToParam"
        - $ref: "#/components/parameters/CountryParam"
      responses:
        "200":
          description: Trend analysis data
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: string
                  periodUnit:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                        value:
                          type: number
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /records:
    get:
      summary: Retrieve records across multiple categories
      description: |
        Returns world, national, age-group, and course records

        **Authentication:**
        - Public tier: Basic access
        - Premium tier: Enhanced details
      operationId: getRecords
      tags:
        - Records
      parameters:
        - name: recordType
          in: query
          description: Type of record
          required: false
          schema:
            type: string
            enum: [world, national, age_group, course]
            default: world
        - name: distance
          in: query
          description: Distance category (km)
          required: false
          schema:
            type: number
        - name: duration
          in: query
          description: Duration category (e.g., 24h)
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/CountryParam"
        - $ref: "#/components/parameters/GenderParam"
        - $ref: "#/components/parameters/AgeCategoryParam"
      responses:
        "200":
          description: Record data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        recordId:
                          type: string
                        perfId:
                          type: string
                        runnerId:
                          type: string
                        recordType:
                          type: string
                        recordValue:
                          type: string
                        recordDate:
                          type: string
                          format: date-time
                        eventId:
                          type: string
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /records/german:
    get:
      summary: Retrieve German records across categories
      description: |
        Returns German-specific records by age category and surface type.
        Based on trecordger table data.

        **Authentication:**
        - Public tier: Basic access
      operationId: getGermanRecords
      tags:
        - Records
      parameters:
        - name: distance
          in: query
          description: Distance category
          required: false
          schema:
            type: string
        - name: recordType
          in: query
          description: Type of record (0=Overall, 1=Road, 2=Track, 3=Indoor)
          required: false
          schema:
            type: integer
            enum: [0, 1, 2, 3]
        - name: ageCategory
          in: query
          description: German age category code
          required: false
          schema:
            type: string
      responses:
        "200":
          description: German record data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        distance:
                          type: string
                        recordType:
                          type: integer
                        ageCategory:
                          type: string
                        performance:
                          type: string
                        dateCreated:
                          type: string
                          format: date-time
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /admin/users:
    get:
      summary: Retrieve API users
      description: |
        Returns list of API users and their access tiers

        **Authentication:**
        - Admin tier required
      operationId: getApiUsers
      tags:
        - Admin
      security:
        - ApiKeyAuth: [] # Admin authentication required
      responses:
        "200":
          description: List of API users
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                        username:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        active:
                          type: boolean
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /admin/submitted-races:
    get:
      summary: Retrieve user-submitted races pending approval
      description: |
        Returns list of races submitted by users that need review and approval.
        Based on tevent_submit table.

        **Authentication:**
        - Admin tier required
      operationId: getSubmittedRaces
      tags:
        - Admin
      security:
        - ApiKeyAuth: [] # Admin authentication required
      parameters:
        - name: submissionType
          in: query
          description: Type of submission (1=new, 2=correction)
          required: false
          schema:
            type: integer
            enum: [1, 2]
        - name: status
          in: query
          description: Submission status
          required: false
          schema:
            type: string
            enum: [pending, approved, rejected]
        - $ref: "#/components/parameters/DateFromParam"
        - $ref: "#/components/parameters/DateToParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: List of submitted races
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        submissionId:
                          type: integer
                        eventId:
                          type: integer
                        eventName:
                          type: string
                        submissionType:
                          type: integer
                        city:
                          type: string
                        country:
                          type: string
                        startDate:
                          type: string
                          format: date-time
                        distance:
                          type: string
                        submitterEmail:
                          type: string
                        createdOn:
                          type: string
                          format: date-time
                  pagination:
                    $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

    post:
      summary: Create a new race submission
      description: |
        Submit a new race for approval

        **Authentication:**
        - Basic tier or higher required
      operationId: createRaceSubmission
      tags:
        - Admin
      security:
        - ApiKeyAuth: [] # Authentication required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventName
                - startDate
                - length
                - country
                - city
                - submitterEmail
              properties:
                eventName:
                  type: string
                  description: Race name
                  required: true
                edition:
                  type: string
                  description: Edition identifier/number
                promOrg:
                  type: string
                  description: Organizing body/promoter
                startDate:
                  type: string
                  format: date-time
                  description: Event start date
                  required: true
                endDate:
                  type: string
                  format: date-time
                  description: Event end date for multi-day events
                length:
                  type: string
                  description: Original distance description (e.g. "100 miles")
                  required: true
                duration:
                  type: string
                  description: Duration for time-based events (e.g. "24h")
                country:
                  type: string
                  description: Country code
                  required: true
                city:
                  type: string
                  description: City name
                  required: true
                website:
                  type: string
                  description: Event website URL
                submitterEmail:
                  type: string
                  description: Email of the person submitting
                  required: true
                comments:
                  type: string
                  description: Additional comments
      responses:
        "201":
          description: Race submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Race submission created successfully"
                  submissionId:
                    type: integer
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /admin/submitted-races/{submissionId}:
    get:
      summary: Retrieve details for a specific race submission
      description: |
        Returns detailed information about a specific race submission.

        **Authentication:**
        - Admin tier required
      operationId: getSubmittedRaceById
      tags:
        - Admin
      security:
        - ApiKeyAuth: [] # Admin authentication required
      parameters:
        - name: submissionId
          in: path
          description: Unique submission identifier
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Submission details
          content:
            application/json:
              schema:
                type: object
                properties:
                  submissionId:
                    type: integer
                  eventId:
                    type: integer
                  eventName:
                    type: string
                  edition:
                    type: string
                  promOrg:
                    type: string
                  contact:
                    type: string
                  address:
                    type: string
                  phone:
                    type: string
                  email:
                    type: string
                  url:
                    type: string
                  eventType:
                    type: integer
                  startDate:
                    type: string
                    format: date-time
                  endDate:
                    type: string
                    format: date-time
                  length:
                    type: string
                  duration:
                    type: string
                  altitudeDiff:
                    type: string
                  postcode:
                    type: string
                  city:
                    type: string
                  country:
                    type: string
                  courseDesc:
                    type: string
                  moreInfo:
                    type: string
                  timeLimit:
                    type: string
                  fieldLimit:
                    type: string
                  fee:
                    type: string
                  iauLabel:
                    type: string
                  recordProof:
                    type: string
                  parentId:
                    type: string
                  display:
                    type: string
                  comments:
                    type: string
                  submitterEmail:
                    type: string
                  submissionType:
                    type: integer
                  createdOn:
                    type: string
                    format: date-time
                  changedOn:
                    type: string
                    format: date-time
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
        "404":
          description: Submission not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

    put:
      summary: Update the status of a race submission
      description: |
        Approve, reject, or update a race submission

        **Authentication:**
        - Admin tier required
      operationId: updateSubmittedRace
      tags:
        - Admin
      security:
        - ApiKeyAuth: [] # Admin authentication required
      parameters:
        - name: submissionId
          in: path
          description: Unique submission identifier
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [approve, reject, update]
                  description: Action to take on the submission
                  required: true
                comments:
                  type: string
                  description: Admin comments about the decision
                eventData:
                  type: object
                  description: Updated event data (required if action is 'update')
      responses:
        "200":
          description: Submission processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                  eventId:
                    type: integer
                    description: ID of the created/updated event (if approved)
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
        "404":
          description: Submission not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"

  /admin/logs:
    get:
      summary: Retrieve API usage logs
      description: |
        Returns logs of API usage and errors

        **Authentication:**
        - Admin tier required
      operationId: getApiLogs
      tags:
        - Admin
      security:
        - ApiKeyAuth: [] # Admin authentication required
      parameters:
        - name: startDate
          in: query
          description: Filter logs from this date
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter logs until this date
          required: false
          schema:
            type: string
            format: date-time
        - name: logLevel
          in: query
          description: Minimum log level
          required: false
          schema:
            type: string
            enum: [info, warning, error, critical]
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/OffsetParam"
      responses:
        "200":
          description: API logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        logId:
                          type: integer
                        timestamp:
                          type: string
                          format: date-time
                        userId:
                          type: integer
                        endpoint:
                          type: string
                        method:
                          type: string
                        status:
                          type: integer
                        responseTime:
                          type: number
                        userAgent:
                          type: string
                        ipAddress:
                          type: string
                        level:
                          type: string
                        message:
                          type: string
                  pagination:
                    $ref: "#/components/schemas/PaginatedResponse/properties/pagination"
        "401":
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationError"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
